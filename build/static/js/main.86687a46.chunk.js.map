{"version":3,"sources":["Context/DataContext.js","Components/InputData.js","Components/QrCode.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","Context","children","useState","data1","setData1","data2","setData2","data3","setData3","indexInput","setIndexInput","result","setResult","Provider","value","InputData","props","errors","setErrors","context","useContext","handleChange","e","target","name","findIndex","index","modifData","a","className","htmlFor","id","type","placeholder","onChange","onClick","length","map","datas","QrCode","showInputs","setShowInputs","buttonGenerate","setButtonGenerate","show","setShow","numberInput","setNumberInput","mapGenerateInput","setMapGenerateInput","qrValue","setQrValue","generateInputs","tables","i","push","layoutInput","size","level","pngUrl","document","getElementById","toDataURL","replace","downloadLink","createElement","href","download","body","appendChild","click","removeChild","finalResult","increment","join","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.86687a46.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\n\nexport const DataContext = createContext()\n\nconst Context = ({ children }) => {\n  const [data1, setData1] = useState(\"\")\n  const [data2, setData2] = useState(\"\")\n  const [data3, setData3] = useState(\"\")\n  const [indexInput, setIndexInput] = useState(\"\")\n  const [result, setResult] = useState([])\n\n  return (\n    <div>\n      <DataContext.Provider value={{\n        data1,\n        setData1,\n        data2,\n        setData2,\n        data3,\n        setData3,\n        indexInput,\n        setIndexInput,\n        result,\n        setResult\n      }}>\n        {children}\n      </DataContext.Provider>\n\n    </div>\n  )\n}\n\nexport default Context","import React, { useState, useContext } from 'react'\n\nimport { DataContext } from '../Context/DataContext'\nimport '../App.css'\n\nconst InputData = (props) => {\n\n  const [errors, setErrors] = useState(\"\")\n\n  const context = useContext(DataContext)\n\n  const handleChange = (e) => {\n    if (e.target.name === \"data1\") {\n      context.setData1(e.target.value)\n    } if (e.target.name === \"data2\") {\n      context.setData2(e.target.value)\n    } if (e.target.name === \"data3\") {\n      context.setData3(e.target.value)\n    }\n  }\n\n  const findIndex = () => {\n    if (props.index !== context.indexInput) {\n      context.setData1(\"\")\n      context.setData2(\"\")\n      context.setData3(\"\")\n    }\n    context.indexInput !== props.index && context.setIndexInput(props.index)\n  }\n\n  const validData = () => {\n    if (props.index === context.indexInput) {\n      if (context.result.length >= props.index) {\n        if (context.result[context.indexInput]) {\n          context.setResult(context.result.map(datas => context.result[context.indexInput] === datas ? { ...datas, data3: context.data3, data2: context.data2, data1: context.data1 } : datas))\n        } else {\n          context.setResult([...context.result, { \"data3\": context.data3, \"data2\": context.data2, \"data1\": context.data1 }])\n          setErrors(\"\")\n        }\n      }\n      else {\n        setErrors(\"le champs précédent n'est pas renseigné\")\n      }\n    }\n    context.setData1(\"\")\n    context.setData2(\"\")\n    context.setData3(\"\")\n  }\n\n  const modifData = async () => {\n    context.setIndexInput(props.index)\n    if (context.result[context.indexInput]) {\n      context.setData1(context.result[props.index].data1)\n      context.setData2(context.result[props.index].data2)\n      context.setData3(context.result[props.index].data3)\n    }\n  }\n\n\n  return (\n    <div className=\"contain\">\n      <p>poteau numéro {props.index + 1}: </p>\n      <div className=\"separator\">\n\n        <div className=\"inputs\">\n          <div className=\"inputSolo\">\n            <label htmlFor={\"chamber\" + props.index}>numéro de chambre: </label>\n            <input id={\"chamber\" + props.index} name=\"data1\" type=\"text\" placeholder=\"\" value={context.indexInput === props.index ? context.data1 : \"\"} onChange={handleChange} onClick={() => findIndex()} />\n          </div>\n          <div className=\"inputSolo\">\n            <label htmlFor={\"insee\" + props.index}>code INSEE: </label>\n            <input id={\"insee\" + props.index} name=\"data2\" type=\"text\" placeholder=\"\" value={context.indexInput === props.index ? context.data2 : \"\"} onChange={handleChange} onClick={() => findIndex()} />\n          </div>\n          <div className=\"inputSolo\">\n            <label htmlFor={\"poteau\" + props.index}>numéro poteau: </label>\n            <input id={\"poteau\" + props.index} name=\"data3\" type=\"text\" placeholder=\"\" value={context.indexInput === props.index ? context.data3 : \"\"} onChange={handleChange} onClick={() => findIndex()} />\n          </div>\n        </div>\n        <div className=\"buttons\">\n          <button onClick={() => validData()}>valider</button>\n          <button onClick={() => modifData()}>modifier</button>\n        </div>\n        {errors !== \"\" && <div className=\"error\" >{errors}</div>}\n      </div>\n      <div className=\"saveResults\">\n        {context.result[props.index] &&\n          <div className=\"results\">\n            <p>données sauvegardées: </p>\n            <p>numéro de chambre: {context.result[props.index].data1}  </p>\n            <p>code INSEE: {context.result[props.index].data2}  </p>\n            <p>numéro poteau: {context.result[props.index].data3}</p>\n          </div>\n        }\n      </div>\n\n\n    </div>\n  )\n}\n\nexport default InputData\n","import React, { useState, useContext } from 'react';\nimport QRCode from 'qrcode.react';\n\nimport InputData from './InputData'\nimport '../App.css'\n\nimport { DataContext } from '../Context/DataContext'\n\nconst QrCode = () => {\n\n  const context = useContext(DataContext)\n\n  const [showInputs, setShowInputs] = useState(false)\n  const [buttonGenerate, setButtonGenerate] = useState(false)\n  const [show, setShow] = useState(false)\n  const [numberInput, setNumberInput] = useState(\"\")\n  const [mapGenerateInput, setMapGenerateInput] = useState(null)\n  const [qrValue, setQrValue] = useState(\"\")\n  let generateInputs = []\n\n  const handleChange = (e) => {\n    setNumberInput(e.target.value)\n  }\n\n  const tables = async () => {\n    generateInputs = []\n    for (let i = 0; i < numberInput; i++) {\n      generateInputs.push(<InputData index={i} />)\n    }\n    setShowInputs(!showInputs)\n    setMapGenerateInput(generateInputs)\n    setButtonGenerate(true)\n  }\n\n  const result = () => {\n    setShow(!show)\n    const finalResult = []\n    let increment = 1\n    for (let i = 0; i < context.result.length; i++) {\n      finalResult.push(` [Codes ${increment}: \\n chambre: ${context.result[i].data1} \\n INSEE: ${context.result[i].data2} \\n poteau: ${context.result[i].data3}] \\n\\n`)\n      increment += 1\n    }\n    setQrValue(finalResult.join(''))\n  }\n\n  const downloadQR = () => {\n    const canvas = document.getElementById(\"qrCode\");\n    const pngUrl = canvas\n      .toDataURL(\"image/png\")\n      .replace(\"image/png\", \"image/octet-stream\");\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = pngUrl;\n    downloadLink.download = \"qrCode.png\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  return (\n    <div>\n      <div className=\"numberInputs\">\n        nombre de champs: <input value={numberInput} onChange={handleChange} /> <button onClick={() => tables()} >valider</button>\n      </div>\n\n      {showInputs && <div>{mapGenerateInput.map((layoutInput, index) => { return (<div key={index}>{layoutInput}</div>) })}</div>}\n      <div className=\"generateCode\">\n        {show &&\n          <div className=\"code\">\n            <QRCode id=\"qrCode\" value={qrValue} size={500} level='M' />\n            <button className=\"download\" onClick={downloadQR}> Telecharger ce QR code </button>\n          </div>\n        }\n        {buttonGenerate && <button onClick={() => result()} >générer le QR Code</button>}\n\n      </div>\n    </div>\n  )\n}\n\nexport default QrCode\n","import './App.css';\nimport QrCode from './Components/QrCode'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QrCode />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Provider from './Context/DataContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}