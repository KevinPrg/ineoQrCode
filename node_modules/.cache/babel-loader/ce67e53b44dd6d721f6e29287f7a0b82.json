{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/psycho/Documents/ineoQrCode/ineoqrcode/src/Components/InputData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { DataContext } from '../Context/DataContext';\n\nconst InputData = props => {\n  _s();\n\n  const context = useContext(DataContext);\n\n  const handleChange = e => {\n    if (e.target.name === \"data1\") {\n      context.setData1(e.target.value);\n    }\n\n    if (e.target.name === \"data2\") {\n      context.setData2(e.target.value);\n    }\n\n    if (e.target.name === \"data3\") {\n      context.setData3(e.target.value);\n    }\n  };\n\n  const validData = () => {\n    if (props.index === context.indexInput) {\n      if (context.result[context.indexInput]) {\n        context.setResult(context.result.map(datas => context.result[context.indexInput] === datas ? { ...datas,\n          data3: context.data3,\n          data2: context.data2,\n          data1: context.data1\n        } : datas));\n      } else {\n        context.setResult([...context.result, {\n          \"data3\": context.data3,\n          \"data2\": context.data2,\n          \"data1\": context.data1\n        }]);\n      }\n\n      context.setData1('0');\n      context.setData2('0');\n      context.setData3('0');\n    }\n  };\n\n  const findIndex = () => {\n    context.indexInput !== props.index && context.setIndexInput(props.index);\n  };\n\n  const modifData = () => {\n    if (context.indexInput === props.index) {\n      if (context.result[context.indexInput]) {\n        context.setData1(context.result[context.indexInput].data1);\n        context.setData2(context.result[context.indexInput].data2);\n        context.setData3(context.result[context.indexInput].data3);\n      } else {\n        context.setData1(\"\");\n        context.setData2(\"\");\n        context.setData3(\"\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"data1\",\n      type: \"text\",\n      placeholder: \"\",\n      value: context.indexInput === props.index ? context.data1 : \"\",\n      onChange: handleChange,\n      onClick: () => findIndex()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"data2\",\n      type: \"text\",\n      placeholder: \"\",\n      value: context.indexInput === props.index ? context.data2 : \"\",\n      onChange: handleChange,\n      onClick: () => findIndex()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"data3\",\n      type: \"text\",\n      placeholder: \"\",\n      value: context.indexInput === props.index ? context.data3 : \"\",\n      onChange: handleChange,\n      onClick: () => findIndex()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => validData(),\n      children: \"validate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => modifData(),\n      children: \"modifier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), context.result[props.index] && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" donn\\xE9es sauvegard\\xE9es: num\\xE9ro de chambre: \", context.result[props.index].data1, \", code INSEE: \", context.result[props.index].data2, \", num\\xE9ro poteau: \", context.result[props.index].data3, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputData, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = InputData;\nexport default InputData;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputData\");","map":{"version":3,"sources":["/home/psycho/Documents/ineoQrCode/ineoqrcode/src/Components/InputData.js"],"names":["React","useContext","DataContext","InputData","props","context","handleChange","e","target","name","setData1","value","setData2","setData3","validData","index","indexInput","result","setResult","map","datas","data3","data2","data1","findIndex","setIndexInput","modifData"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\n\nimport { DataContext } from '../Context/DataContext'\n\nconst InputData = (props) => {\n\n  const context = useContext(DataContext)\n\n  const handleChange = (e) => {\n    if (e.target.name === \"data1\") {\n      context.setData1(e.target.value)\n    } if (e.target.name === \"data2\") {\n      context.setData2(e.target.value)\n    } if (e.target.name === \"data3\") {\n      context.setData3(e.target.value)\n    }\n  }\n\n  const validData = () => {\n    if (props.index === context.indexInput) {\n      if (context.result[context.indexInput]) {\n        context.setResult(context.result.map(datas => context.result[context.indexInput] === datas ? { ...datas, data3: context.data3, data2: context.data2, data1: context.data1 } : datas))\n      } else {\n        context.setResult([...context.result, { \"data3\": context.data3, \"data2\": context.data2, \"data1\": context.data1 }])\n      }\n      context.setData1('0')\n      context.setData2('0')\n      context.setData3('0')\n    }\n  }\n\n  const findIndex = () => {\n    context.indexInput !== props.index && context.setIndexInput(props.index)\n  }\n\n  const modifData = () => {\n    if (context.indexInput === props.index) {\n      if (context.result[context.indexInput]) {\n        context.setData1(context.result[context.indexInput].data1)\n        context.setData2(context.result[context.indexInput].data2)\n        context.setData3(context.result[context.indexInput].data3)\n      } else {\n        context.setData1(\"\")\n        context.setData2(\"\")\n        context.setData3(\"\")\n      }\n    }\n  }\n\n  return (\n    <div>\n      <input name=\"data1\" type=\"text\" placeholder=\"\" value={context.indexInput === props.index ? context.data1 : \"\"} onChange={handleChange} onClick={() => findIndex()} />\n      <input name=\"data2\" type=\"text\" placeholder=\"\" value={context.indexInput === props.index ? context.data2 : \"\"} onChange={handleChange} onClick={() => findIndex()} />\n      <input name=\"data3\" type=\"text\" placeholder=\"\" value={context.indexInput === props.index ? context.data3 : \"\"} onChange={handleChange} onClick={() => findIndex()} />\n\n      <button onClick={() => validData()}>validate</button>\n      <button onClick={() => modifData()}>modifier</button>\n\n      {context.result[props.index] && <div> données sauvegardées: numéro de chambre: {context.result[props.index].data1}, code INSEE: {context.result[props.index].data2}, numéro poteau: {context.result[props.index].data3} </div>}\n\n    </div>\n  )\n}\n\nexport default InputData\n"]},"metadata":{},"sourceType":"module"}