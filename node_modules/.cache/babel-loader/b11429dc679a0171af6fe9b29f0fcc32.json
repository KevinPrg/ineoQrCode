{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/psycho/Documents/ineoQrCode/ineoqrcode/src/Components/QrCode.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport QRCode from 'qrcode.react';\nimport InputData from './InputData';\nimport { DataContext } from '../Context/DataContext';\n\nconst QrCode = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [concat, setConcat] = useState(null);\n  const [numberInput, setNumberInput] = useState(0);\n  const [validateInput, setValidateInput] = useState(0);\n  const [table, setTable] = useState([]);\n  const i = 0;\n  const context = useContext(DataContext);\n\n  const result = () => {\n    setShow(!show);\n    setConcat(context.data1 + context.data2 + context.data3);\n    console.log(concat);\n  };\n\n  const handleChange = e => {\n    setNumberInput(e.target.value);\n  };\n\n  const tables = () => {\n    for (i = 0; i < validateInput; i++) {\n      table.push( /*#__PURE__*/_jsxDEV(InputData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 18\n      }, this));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"nombre de champs: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: numberInput,\n      onChange: handleChange()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setValidateInput(numberInput),\n      children: \"valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 81\n    }, this), table, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => result(),\n      children: \"g\\xE9n\\xE9rer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), show === true && /*#__PURE__*/_jsxDEV(QRCode, {\n      value: concat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QrCode, \"JIz4IllKEkIrgxQIWSqfq+4RrKM=\");\n\n_c = QrCode;\nexport default QrCode;\n\nvar _c;\n\n$RefreshReg$(_c, \"QrCode\");","map":{"version":3,"sources":["/home/psycho/Documents/ineoQrCode/ineoqrcode/src/Components/QrCode.js"],"names":["React","useState","useContext","QRCode","InputData","DataContext","QrCode","show","setShow","concat","setConcat","numberInput","setNumberInput","validateInput","setValidateInput","table","setTable","i","context","result","data1","data2","data3","console","log","handleChange","e","target","value","tables","push"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMgB,CAAC,GAAG,CAAV;AACA,QAAMC,OAAO,GAAGhB,UAAU,CAACG,WAAD,CAA1B;;AAEA,QAAMc,MAAM,GAAG,MAAM;AACnBX,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAG,IAAAA,SAAS,CAACQ,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACG,KAAxB,GAAgCH,OAAO,CAACI,KAAzC,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AACD,GAJD;;AAMA,QAAMgB,YAAY,GAAIC,CAAD,IAAO;AAC1Bd,IAAAA,cAAc,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMC,MAAM,GAAG,MAAM;AACnB,SAAKZ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGJ,aAAhB,EAA+BI,CAAC,EAAhC,EAAoC;AAClCF,MAAAA,KAAK,CAACe,IAAN,eAAW,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAX;AACD;AACF,GAJD;;AAMA,sBACE;AAAA,kDAEoB;AAAO,MAAA,KAAK,EAAEnB,WAAd;AAA2B,MAAA,QAAQ,EAAEc,YAAY;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFpB,oBAE4E;AAAQ,MAAA,OAAO,EAAE,MAAMX,gBAAgB,CAACH,WAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAF5E,EAKGI,KALH,eAQE;AAAQ,MAAA,OAAO,EAAE,MAAMI,MAAM,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EASGZ,IAAI,KAAK,IAAT,iBACC,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEE;AAAf;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAzCD;;GAAMH,M;;KAAAA,M;AA2CN,eAAeA,MAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport QRCode from 'qrcode.react';\n\nimport InputData from './InputData'\n\nimport { DataContext } from '../Context/DataContext'\n\nconst QrCode = () => {\n\n  const [show, setShow] = useState(false)\n  const [concat, setConcat] = useState(null)\n  const [numberInput, setNumberInput] = useState(0)\n  const [validateInput, setValidateInput] = useState(0)\n  const [table, setTable] = useState([])\n  const i = 0\n  const context = useContext(DataContext)\n\n  const result = () => {\n    setShow(!show)\n    setConcat(context.data1 + context.data2 + context.data3)\n    console.log(concat)\n  }\n\n  const handleChange = (e) => {\n    setNumberInput(e.target.value)\n  }\n\n  const tables = () => {\n    for (i = 0; i < validateInput; i++) {\n      table.push(<InputData />)\n    }\n  }\n\n  return (\n    <div>\n\n      nombre de champs: <input value={numberInput} onChange={handleChange()} /> <button onClick={() => setValidateInput(numberInput)} >valider</button>\n\n\n      {table}\n\n\n      <button onClick={() => result()} >générer</button>\n      {show === true &&\n        <QRCode value={concat} />\n      }\n    </div>\n  )\n}\n\nexport default QrCode\n"]},"metadata":{},"sourceType":"module"}