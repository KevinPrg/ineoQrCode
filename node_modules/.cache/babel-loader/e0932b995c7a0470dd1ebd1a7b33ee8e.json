{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/psycho/Documents/ineoQrCode/ineoqrcode/src/Components/QrCode.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport QRCode from 'qrcode.react';\nimport InputData from './InputData';\nimport '../App.css';\nimport { DataContext } from '../Context/DataContext';\n\nconst QrCode = () => {\n  _s();\n\n  const context = useContext(DataContext);\n  const [showInputs, setShowInputs] = useState(false);\n  const [show, setShow] = useState(false);\n  const [numberInput, setNumberInput] = useState(\"\");\n  const [mapGenerateInput, setMapGenerateInput] = useState(null);\n  const [qrValue, setQrValue] = useState(\"\");\n  let generateInputs = [];\n\n  const handleChange = e => {\n    setNumberInput(e.target.value);\n  };\n\n  const tables = async () => {\n    generateInputs = [];\n\n    for (let i = 0; i < numberInput; i++) {\n      generateInputs.push( /*#__PURE__*/_jsxDEV(InputData, {\n        index: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 27\n      }, this));\n    }\n\n    setShowInputs(!showInputs);\n    setMapGenerateInput(generateInputs);\n  };\n\n  const result = () => {\n    setShow(!show);\n    const finalResult = [];\n    let increment = 1;\n\n    for (let i = 0; i < context.result.length; i++) {\n      finalResult.push(` [Données ${increment}: \\n Numéro de chambre: ${context.result[i].data1} \\n Code INSEE: ${context.result[i].data2} \\n Numéro de poteau: ${context.result[i].data3}] \\n\\n`);\n      increment += 1;\n    }\n\n    setQrValue(finalResult.join(''));\n  };\n\n  const downloadQR = () => {\n    const canvas = document.getElementById(\"qrCode\");\n    const pngUrl = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = pngUrl;\n    downloadLink.download = \"qrCode.png\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numberInputs\",\n      children: [\"nombre de champs: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: numberInput,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 27\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => tables(),\n        children: \"valider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 81\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), showInputs === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: mapGenerateInput.map((layoutInput, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: layoutInput\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 92\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generateCode\",\n      children: [show === true && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code\",\n        children: [/*#__PURE__*/_jsxDEV(QRCode, {\n          id: \"qrCode\",\n          value: qrValue,\n          size: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download\",\n          onClick: downloadQR,\n          children: \" Telecharger ce QR code \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => result(),\n        children: \"g\\xE9n\\xE9rer le QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QrCode, \"CINu1ufXXZZIwiSuoMZpc0t1HXo=\");\n\n_c = QrCode;\nexport default QrCode;\n\nvar _c;\n\n$RefreshReg$(_c, \"QrCode\");","map":{"version":3,"sources":["/home/psycho/Documents/ineoQrCode/ineoqrcode/src/Components/QrCode.js"],"names":["React","useState","useContext","QRCode","InputData","DataContext","QrCode","context","showInputs","setShowInputs","show","setShow","numberInput","setNumberInput","mapGenerateInput","setMapGenerateInput","qrValue","setQrValue","generateInputs","handleChange","e","target","value","tables","i","push","result","finalResult","increment","length","data1","data2","data3","join","downloadQR","canvas","document","getElementById","pngUrl","toDataURL","replace","downloadLink","createElement","href","download","body","appendChild","click","removeChild","map","layoutInput","index"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport QRCode from 'qrcode.react';\n\nimport InputData from './InputData'\nimport '../App.css'\n\nimport { DataContext } from '../Context/DataContext'\n\nconst QrCode = () => {\n\n  const context = useContext(DataContext)\n\n  const [showInputs, setShowInputs] = useState(false)\n  const [show, setShow] = useState(false)\n  const [numberInput, setNumberInput] = useState(\"\")\n  const [mapGenerateInput, setMapGenerateInput] = useState(null)\n  const [qrValue, setQrValue] = useState(\"\")\n  let generateInputs = []\n\n  const handleChange = (e) => {\n    setNumberInput(e.target.value)\n  }\n\n  const tables = async () => {\n    generateInputs = []\n    for (let i = 0; i < numberInput; i++) {\n      generateInputs.push(<InputData index={i} />)\n    }\n    setShowInputs(!showInputs)\n    setMapGenerateInput(generateInputs)\n  }\n\n  const result = () => {\n    setShow(!show)\n    const finalResult = []\n    let increment = 1\n    for (let i = 0; i < context.result.length; i++) {\n      finalResult.push(` [Données ${increment}: \\n Numéro de chambre: ${context.result[i].data1} \\n Code INSEE: ${context.result[i].data2} \\n Numéro de poteau: ${context.result[i].data3}] \\n\\n`)\n      increment += 1\n    }\n    setQrValue(finalResult.join(''))\n  }\n\n  const downloadQR = () => {\n    const canvas = document.getElementById(\"qrCode\");\n    const pngUrl = canvas\n      .toDataURL(\"image/png\")\n      .replace(\"image/png\", \"image/octet-stream\");\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = pngUrl;\n    downloadLink.download = \"qrCode.png\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  return (\n    <div>\n      <div className=\"numberInputs\">\n        nombre de champs: <input value={numberInput} onChange={handleChange} /> <button onClick={() => tables()} >valider</button>\n      </div>\n\n      {showInputs === true && <div>{mapGenerateInput.map((layoutInput, index) => { return (<div key={index}>{layoutInput}</div>) })}</div>}\n      <div className=\"generateCode\">\n        {show === true &&\n          <div className=\"code\">\n            <QRCode id=\"qrCode\" value={qrValue} size={200} />\n            <button className=\"download\" onClick={downloadQR}> Telecharger ce QR code </button>\n          </div>\n        }\n        <button onClick={() => result()} >générer le QR Code</button>\n\n\n      </div>\n    </div>\n  )\n}\n\nexport default QrCode\n"]},"metadata":{},"sourceType":"module"}