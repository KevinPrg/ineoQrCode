{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/psycho/Documents/ineoQrCode/ineoqrcode/src/Components/QrCode.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport QRCode from 'qrcode.react';\nimport InputData from './InputData';\nimport { DataContext } from '../Context/DataContext';\n\nconst QrCode = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [concat, setConcat] = useState(null);\n  const [numberInput, setNumberInput] = useState(0);\n  const [validateInput, setValidateInput] = useState(0);\n  let table = [];\n  let i = 0;\n  const context = useContext(DataContext);\n\n  const result = () => {\n    setShow(!show);\n    setConcat(context.data1 + context.data2 + context.data3);\n    console.log(concat);\n  };\n\n  const handleChange = e => {\n    setNumberInput(e.target.value);\n  };\n\n  const tables = () => {\n    setValidateInput(numberInput);\n\n    for (i = 0; i < validateInput; i++) {\n      table.push( /*#__PURE__*/_jsxDEV(InputData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 18\n      }, this));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"nombre de champs: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: numberInput,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => tables(),\n      children: \"valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 79\n    }, this), table.map(index => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: \"index\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => result(),\n      children: \"g\\xE9n\\xE9rer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), show === true && /*#__PURE__*/_jsxDEV(QRCode, {\n      value: concat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QrCode, \"I0DWR+QbMMrZSJMBY+fFia9V3JA=\");\n\n_c = QrCode;\nexport default QrCode;\n\nvar _c;\n\n$RefreshReg$(_c, \"QrCode\");","map":{"version":3,"sources":["/home/psycho/Documents/ineoQrCode/ineoqrcode/src/Components/QrCode.js"],"names":["React","useState","useContext","QRCode","InputData","DataContext","QrCode","show","setShow","concat","setConcat","numberInput","setNumberInput","validateInput","setValidateInput","table","i","context","result","data1","data2","data3","console","log","handleChange","e","target","value","tables","push","map","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,CAAD,CAAlD;AACA,MAAIc,KAAK,GAAG,EAAZ;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,QAAMC,OAAO,GAAGf,UAAU,CAACG,WAAD,CAA1B;;AAEA,QAAMa,MAAM,GAAG,MAAM;AACnBV,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAG,IAAAA,SAAS,CAACO,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACG,KAAxB,GAAgCH,OAAO,CAACI,KAAzC,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACD,GAJD;;AAMA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AAC1Bb,IAAAA,cAAc,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMC,MAAM,GAAG,MAAM;AACnBd,IAAAA,gBAAgB,CAACH,WAAD,CAAhB;;AACA,SAAKK,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,aAAhB,EAA+BG,CAAC,EAAhC,EAAoC;AAClCD,MAAAA,KAAK,CAACc,IAAN,eAAW,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAX;AACD;AACF,GALD;;AAOA,sBACE;AAAA,kDAEoB;AAAO,MAAA,KAAK,EAAElB,WAAd;AAA2B,MAAA,QAAQ,EAAEa;AAArC;AAAA;AAAA;AAAA;AAAA,YAFpB,oBAE0E;AAAQ,MAAA,OAAO,EAAE,MAAMI,MAAM,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAF1E,EAKGb,KAAK,CAACe,GAAN,CAAUC,KAAK,IAAI;AAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KAFA,CALH,eAUE;AAAQ,MAAA,OAAO,EAAE,MAAMb,MAAM,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,EAWGX,IAAI,KAAK,IAAT,iBACC,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEE;AAAf;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA5CD;;GAAMH,M;;KAAAA,M;AA8CN,eAAeA,MAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport QRCode from 'qrcode.react';\n\nimport InputData from './InputData'\n\nimport { DataContext } from '../Context/DataContext'\n\nconst QrCode = () => {\n\n  const [show, setShow] = useState(false)\n  const [concat, setConcat] = useState(null)\n  const [numberInput, setNumberInput] = useState(0)\n  const [validateInput, setValidateInput] = useState(0)\n  let table = []\n  let i = 0\n  const context = useContext(DataContext)\n\n  const result = () => {\n    setShow(!show)\n    setConcat(context.data1 + context.data2 + context.data3)\n    console.log(concat)\n  }\n\n  const handleChange = (e) => {\n    setNumberInput(e.target.value)\n  }\n\n  const tables = () => {\n    setValidateInput(numberInput)\n    for (i = 0; i < validateInput; i++) {\n      table.push(<InputData />)\n    }\n  }\n\n  return (\n    <div>\n\n      nombre de champs: <input value={numberInput} onChange={handleChange} /> <button onClick={() => tables()} >valider</button>\n\n\n      {table.map(index => {\n        <div>index</div>\n      })}\n\n\n      <button onClick={() => result()} >générer</button>\n      {show === true &&\n        <QRCode value={concat} />\n      }\n    </div>\n  )\n}\n\nexport default QrCode\n"]},"metadata":{},"sourceType":"module"}